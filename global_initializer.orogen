# frozen_string_literal: true

name 'global_initializer'

OroGen::Spec::Deployment.register_global_initializer(:rock_build_tests)
if defined?(OroGen::Gen::RTT_CPP::Deployment)
    OroGen::Gen::RTT_CPP::Deployment.register_global_initializer(
        :rock_build_tests,
        deployment_cmake: <<~CMAKE,
            orogen_pkg_check_modules(global_initializer_dependency
                                     REQUIRED global_initializer_dependency)
            include_directories(${global_initializer_dependency_INCLUDE_DIRS})
        CMAKE
        global_scope: <<~TOPLEVEL,
            #include <iostream>
            #include <global_initializer_dependency/Data.hpp>

            global_initializer_dependency::Data global_value;
        TOPLEVEL
        init: <<~INIT,
            global_value.value = 100;
        INIT
        exit: <<~EXIT
            std::cout << "EXIT CODE" << std::endl;
        EXIT
    )
end

task_context 'Task' do
    needs_configuration
    needs_global_initializer :rock_build_tests

    periodic 0.1
end
